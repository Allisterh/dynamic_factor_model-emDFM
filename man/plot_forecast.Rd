% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_forecast.R
\name{plot_forecast}
\alias{plot_forecast}
\title{Plot the forecasts of an estimated DFM}
\usage{
plot_forecast(
  obj_fit,
  d,
  variable = "indpro_SCA",
  max_horizon = 3,
  scale_attributes = NULL,
  seasonal_attributes_indpro = NULL
)
}
\arguments{
\item{obj_fit}{A list of estimated parameters of the Dynamic Factor Model, as
obtained from \code{pca_estimator()}, \code{kalman_filter()}, \code{kalman_smoother()}, \code{em_algorithm()}.}

\item{d}{A tibble of time series, with dates in the first column.}

\item{variable}{A string. Target variable whose observed and forecasted values are to be drawn.}

\item{max_horizon}{An integer. Maximum number of steps-ahead of the forecast to plot. Default is 3.}

\item{scale_attributes}{Scaling attributes of the original dataset, including the mean and standard
deviation of each variable in the dataset. Usually obtained from \code{scale_tibble()$scale_attributes}.}

\item{seasonal_attributes_indpro}{A tibble of the seasonal attributes of industrial production, as obtained from
\code{get_seasonal_attributes_indpro}. Please notice that this argument is primarily for initial development and is
likely to be deprecated in future releases to achieve higher generalization and reproducibility.}
}
\value{
A plot of the observed and forecasted values of the target \code{variable}.
}
\description{
Plot the forecasts of an estimated DFM
}
\examples{
# d <- download_clean_data("IT")
# scale_fit <- scale_tibble(d)
# em_fit <- em_algorithm(d)
# eurostat_indpro_NSA <- get_eurostat("sts_inpr_m",
# filters = list(geo = input$geo_code,
#               s_adj = "NSA",
#               unit = "I15",
#               nace_r2 = "C")) \%>\%
#  dplyr::select(date = time, indpro_NSA = values)
# seasonal_attributes_indpro <- get_seasonal_attributes_indpro(eurostat_indpro_NSA)
# plot_forecast(em_fit, d,
#               variable = "indpro_SCA",
#               max_horizon = 3,
#               scale_attributes = scale_fit$scale_attributes,
#               seasonal_attributes_indpro = seasonal_attributes_indpro)


}
\seealso{
\code{scale_attributes}
}
